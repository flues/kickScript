{% extends "layout.twig" %}

{% block content %}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>{{ player.displayName }}</h1>
        <div>
            <a href="{{ url_for('players.edit', {'id': player.id}) }}" class="btn btn-primary me-2">
                <i class="ph-pencil"></i> Bearbeiten
            </a>
            <a href="{{ url_for('players.list') }}" class="btn btn-secondary">
                <i class="ph-list"></i> Alle Spieler
            </a>
        </div>
    </div>
    
    <div class="row">
        <!-- Spielerprofil -->
        <div class="col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-body text-center">
                    {% if player.avatar %}
                        <img src="{{ player.avatar }}" alt="{{ player.name }}" class="rounded-circle mb-3" style="width: 150px; height: 150px; object-fit: cover;">
                    {% else %}
                        <div class="bg-secondary rounded-circle d-flex justify-content-center align-items-center mx-auto mb-3" style="width: 150px; height: 150px; font-size: 4rem;">
                            {{ player.name|slice(0, 1)|upper }}
                        </div>
                    {% endif %}
                    
                    <h3 class="card-title">{{ player.name }}</h3>
                    {% if player.nickname %}
                        <p class="text-muted">"{{ player.nickname }}"</p>
                    {% endif %}
                    
                    <div class="mb-3">
                        <div class="elo-rating-display">{{ player.eloRating }} ELO</div>
                    </div>
                    
                    <div class="text-start mt-4">
                        <p><strong>ID:</strong> <span class="text-muted">{{ player.id }}</span></p>
                        <p><strong>Erstellt am:</strong> <span class="text-muted">{{ player.createdAt|date('d.m.Y H:i') }}</span></p>
                        <p>
                            <strong>Letztes Spiel:</strong> 
                            <span class="text-muted">
                                {% if player.lastMatch %}
                                    {{ player.lastMatch|date('d.m.Y H:i') }}
                                {% else %}
                                    Noch kein Spiel
                                {% endif %}
                            </span>
                        </p>
                    </div>
                    
                    <div class="mt-4 d-grid gap-2">
                        <a href="{{ url_for('matches.create') }}?player={{ player.id }}" class="btn btn-success">
                            <i class="ph-soccer-ball"></i> Neues Spiel mit diesem Spieler
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Statistiken -->
        <div class="col-lg-8 mb-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">Statistiken</h5>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-3 col-6 mb-3">
                            <div class="card bg-gradient-dark text-center">
                                <div class="card-body p-3">
                                    <h2 class="mb-0">{{ player.statistics.matchesPlayed }}</h2>
                                    <small class="text-muted">Spiele gesamt</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-6 mb-3">
                            <div class="card bg-gradient-dark text-center">
                                <div class="card-body p-3">
                                    <h2 class="mb-0">{{ player.statistics.wins }}</h2>
                                    <small class="text-muted">Siege</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-6 mb-3">
                            <div class="card bg-gradient-dark text-center">
                                <div class="card-body p-3">
                                    <h2 class="mb-0">{{ player.statistics.losses }}</h2>
                                    <small class="text-muted">Niederlagen</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-6 mb-3">
                            <div class="card bg-gradient-dark text-center">
                                <div class="card-body p-3">
                                    <h2 class="mb-0">{{ player.statistics.draws }}</h2>
                                    <small class="text-muted">Unentschieden</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mb-4">
                        <div class="col-md-4 col-6 mb-3">
                            <div class="card bg-gradient-dark text-center">
                                <div class="card-body p-3">
                                    <h2 class="mb-0">{{ player.winRate }}%</h2>
                                    <small class="text-muted">Win-Rate</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-6 mb-3">
                            <div class="card bg-gradient-dark text-center">
                                <div class="card-body p-3">
                                    <h2 class="mb-0">{{ player.statistics.goalsScored }}</h2>
                                    <small class="text-muted">Tore geschossen</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-6 mb-3">
                            <div class="card bg-gradient-dark text-center">
                                <div class="card-body p-3">
                                    <h2 class="mb-0">{{ player.statistics.goalsConceded }}</h2>
                                    <small class="text-muted">Tore kassiert</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <h5 class="mt-4 mb-3">ELO-Verlauf</h5>
                    <div class="chart-container mb-3">
                        {% if eloChartData|length > 1 %}
                            <canvas id="eloChartCanvas" height="200"></canvas>
                        {% else %}
                            <div class="text-center py-4">
                                <i class="ph-chart-line" style="font-size: 2.5rem; opacity: 0.5;"></i>
                                <p class="mt-3 mb-0">Nicht gen√ºgend Daten f√ºr ELO-Verlauf.</p>
                                <p class="text-muted">Spiele mehr Matches, um den Verlauf zu sehen!</p>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Seitenstatistiken -->
        {% if totalMatches > 0 and sideStatistics %}
            <div class="col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="ph-arrows-split"></i> Statistiken nach Tischseite
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Bevorzugte Seite √úbersicht -->
                        {% if preferredSide.side %}
                            <div class="alert alert-info mb-3">
                                <div class="d-flex align-items-center gap-2">
                                    <span class="fs-4">
                                        {{ preferredSide.side == 'blau' ? 'üîµ' : '‚ö™' }}
                                    </span>
                                    <div>
                                        <strong>Bevorzugte Seite: {{ preferredSide.side == 'blau' ? 'Blau' : 'Wei√ü' }}</strong><br>
                                        <small>{{ preferredSide.advantage }}% h√∂here Win-Rate</small>
                                    </div>
                                </div>
                            </div>
                        {% endif %}

                        <!-- Seitenvergleich -->
                        <div class="row mb-3">
                            <div class="col-6">
                                <div class="side-stats-card p-3 text-center {{ preferredSide.side == 'blau' ? 'preferred-side' : '' }}">
                                    <div class="side-stats-header blue">
                                        <span class="side-icon">üîµ</span>
                                        <span>Blaue Seite</span>
                                    </div>
                                    <div class="win-rate-display blue">
                                        {{ sideStatistics.blau.winRate }}%
                                    </div>
                                    <div class="text-muted">
                                        {{ sideStatistics.blau.wins }}/{{ sideStatistics.blau.matchesPlayed }} Siege
                                    </div>
                                    <hr class="my-2">
                                    <small class="text-muted">
                                        ‚öΩ {{ sideStatistics.blau.avgGoalsScored }}<br>
                                        üõ°Ô∏è {{ sideStatistics.blau.avgGoalsConceded }}
                                    </small>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="side-stats-card p-3 text-center {{ preferredSide.side == 'weiss' ? 'preferred-side' : '' }}">
                                    <div class="side-stats-header white">
                                        <span class="side-icon">‚ö™</span>
                                        <span>Wei√üe Seite</span>
                                    </div>
                                    <div class="win-rate-display white">
                                        {{ sideStatistics.weiss.winRate }}%
                                    </div>
                                    <div class="text-muted">
                                        {{ sideStatistics.weiss.wins }}/{{ sideStatistics.weiss.matchesPlayed }} Siege
                                    </div>
                                    <hr class="my-2">
                                    <small class="text-muted">
                                        ‚öΩ {{ sideStatistics.weiss.avgGoalsScored }}<br>
                                        üõ°Ô∏è {{ sideStatistics.weiss.avgGoalsConceded }}
                                    </small>
                                </div>
                            </div>
                        </div>

                        <!-- Chart-Container -->
                        {% if sideStatistics.blau.matchesPlayed > 0 or sideStatistics.weiss.matchesPlayed > 0 %}
                            <div class="chart-container side-distribution-chart">
                                <canvas id="sideComparisonChart" width="400" height="200"></canvas>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        {% endif %}
        
        <!-- Achievements -->
        <div class="col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="ph-medal me-2"></i>Achievements
                        {% if player.achievements|length > 0 %}
                            <span class="badge bg-primary ms-2">{{ player.achievements|length }}</span>
                        {% endif %}
                    </h5>
                </div>
                <div class="card-body">
                    {% if player.achievements|length > 0 %}
                        <div class="row">
                            {% for achievement in player.achievements %}
                                <div class="col-md-12 mb-3">
                                    <div class="card bg-gradient-dark border-warning">
                                        <div class="card-body p-3">
                                            <div class="d-flex align-items-center mb-2">
                                                <span class="fs-4 me-2">{{ achievement.name|slice(0, 2) }}</span>
                                                <h6 class="card-title mb-0 flex-grow-1">{{ achievement.name|slice(2) }}</h6>
                                            </div>
                                            <p class="card-text small mb-2">{{ achievement.description }}</p>
                                            <small class="text-muted">
                                                <i class="ph-calendar me-1"></i>{{ achievement.unlockedAt|date('d.m.Y') }}
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                        <div class="mt-3 text-center">
                            <small class="text-muted">
                                <i class="ph-trophy me-1"></i>{{ player.achievements|length }} von vielen Achievements freigeschaltet!
                            </small>
                        </div>
                    {% else %}
                        <div class="text-center py-5">
                            <i class="ph-medal" style="font-size: 3rem; opacity: 0.5;"></i>
                            <p class="mt-3 mb-0">Noch keine Achievements freigeschaltet.</p>
                            <p class="text-muted">Spiele mehr Matches, um Achievements freizuschalten!</p>
                            <div class="mt-3">
                                <small class="text-muted">
                                    M√∂gliche Achievements: Winning Streak, H√∂chster Sieg, Torsch√ºtzenk√∂nig, Veteran und viele mehr!
                                </small>
                            </div>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
        
        <!-- Letzte Spiele -->
        <div class="col-lg-4 mb-4">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Letzte Spiele</h5>
                    <a href="{{ url_for('matches.history') }}?player={{ player.id }}" class="btn btn-sm btn-secondary">Alle anzeigen</a>
                </div>
                <div class="card-body">
                    {% if player.statistics.matchesPlayed > 0 %}
                        {% if recentMatches|length > 0 %}
                            <div class="list-group list-group-flush">
                                {% for match in recentMatches %}
                                    <div class="list-group-item bg-dark match-history-item">
                                        <div class="match-date">{{ match.playedAt|date('d.m.Y H:i') }}</div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="player-vs">
                                                {% set opponent = match.player1Id == player.id 
                                                    ? player_service.getPlayerById(match.player2Id) 
                                                    : player_service.getPlayerById(match.player1Id) %}
                                                {% set playerSide = match.getPlayerSide(player.id) %}
                                                {% set opponentSide = match.getOpponentSide(player.id) %}
                                                
                                                <span class="player-side-badge side-{{ playerSide }}">
                                                    {{ playerSide == 'blau' ? 'üîµ' : '‚ö™' }} {{ player.displayName }}
                                                </span>
                                                <span class="vs-separator">vs.</span>
                                                <span class="player-side-badge side-{{ opponentSide }}">
                                                    {{ opponentSide == 'blau' ? 'üîµ' : '‚ö™' }} 
                                                    <a href="{{ url_for('players.view', {'id': opponent.id}) }}" class="text-decoration-none text-light">
                                                        {{ opponent.displayName }}
                                                    </a>
                                                </span>
                                            </div>
                                            <div class="match-result">
                                                {% set playerScore = match.player1Id == player.id ? match.scorePlayer1 : match.scorePlayer2 %}
                                                {% set opponentScore = match.player1Id == player.id ? match.scorePlayer2 : match.scorePlayer1 %}
                                                <span class="badge {% if playerScore > opponentScore %}bg-success{% elseif playerScore < opponentScore %}bg-danger{% else %}bg-secondary{% endif %}">
                                                    {{ playerScore }}:{{ opponentScore }}
                                                </span>
                                                
                                                {% if match.eloChange is defined %}
                                                    {% set eloChange = match.player1Id == player.id 
                                                        ? (match.eloChange.player1 is defined ? match.eloChange.player1 : match.eloChange) 
                                                        : (match.eloChange.player2 is defined ? match.eloChange.player2 : match.eloChange) %}
                                                    
                                                    {% if eloChange > 0 %}
                                                        <span class="badge bg-success ms-2">+{{ eloChange }}</span>
                                                    {% elseif eloChange < 0 %}
                                                        <span class="badge bg-danger ms-2">{{ eloChange }}</span>
                                                    {% else %}
                                                        <span class="badge bg-secondary ms-2">¬±0</span>
                                                    {% endif %}
                                                {% endif %}
                                            </div>
                                        </div>
                                        
                                        {% if match.notes %}
                                            <div class="mt-2">
                                                <small class="text-muted">{{ match.notes }}</small>
                                            </div>
                                        {% endif %}
                                    </div>
                                {% endfor %}
                            </div>
                        {% else %}
                            <div class="text-center py-4">
                                <i class="ph-magnifying-glass" style="font-size: 2.5rem; opacity: 0.5;"></i>
                                <p class="mt-3 mb-0">Keine aktuellen Spiele gefunden.</p>
                            </div>
                        {% endif %}
                    {% else %}
                        <div class="text-center py-5">
                            <i class="ph-soccer-ball" style="font-size: 3rem; opacity: 0.5;"></i>
                            <p class="mt-3 mb-0">Noch keine Spiele gespielt.</p>
                            <p class="text-muted">Erfasse ein neues Spiel, um die Spielhistorie zu sehen!</p>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block scripts %}
<script type="application/json" id="eloChartData">{{ eloChartData|json_encode|raw }}</script>
{% if sideChartData %}
<script type="application/json" id="sideChartData">{{ sideChartData|json_encode|raw }}</script>
{% endif %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // ELO-Verlauf Chart
        const eloDataElement = document.getElementById('eloChartData');
        const eloChartData = JSON.parse(eloDataElement.textContent);
        
        if (eloChartData.length > 1) {
            try {
                const ctx = document.getElementById('eloChartCanvas').getContext('2d');
                
                // Erstelle Labels aus den Zeitstempeln (vereinfacht)
                const labels = eloChartData.map((point, index) => {
                    const date = new Date(point.x);
                    return date.toLocaleDateString('de-DE', { 
                        day: '2-digit', 
                        month: '2-digit'
                    });
                });
                
                // Extrahiere nur die ELO-Werte
                const eloValues = eloChartData.map(point => point.y);
                
                // Erstelle das Chart mit einfacher Konfiguration
                new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'ELO Rating',
                        data: eloValues,
                        borderColor: '#0d6efd',
                        backgroundColor: 'rgba(13, 110, 253, 0.1)',
                        borderWidth: 2,
                        tension: 0.1,
                        fill: true,
                        pointRadius: 4,
                        pointHoverRadius: 6,
                        pointBackgroundColor: '#0d6efd',
                        pointBorderColor: '#ffffff',
                        pointBorderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    interaction: {
                        intersect: false,
                        mode: 'index'
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            backgroundColor: 'rgba(33, 37, 41, 0.9)',
                            titleColor: '#f8f9fa',
                            bodyColor: '#f8f9fa',
                            borderColor: '#6c757d',
                            borderWidth: 1,
                            callbacks: {
                                title: function(context) {
                                    const index = context[0].dataIndex;
                                    const date = new Date(eloChartData[index].x);
                                    return date.toLocaleDateString('de-DE', {
                                        day: '2-digit',
                                        month: '2-digit',
                                        year: 'numeric'
                                    });
                                },
                                label: function(context) {
                                    return 'ELO: ' + context.parsed.y;
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            display: true,
                            title: {
                                display: true,
                                text: 'Spielverlauf',
                                color: '#f8f9fa'
                            },
                            ticks: {
                                color: '#adb5bd',
                                maxTicksLimit: 8
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)',
                                drawBorder: false
                            }
                        },
                        y: {
                            display: true,
                            title: {
                                display: true,
                                text: 'ELO Rating',
                                color: '#f8f9fa'
                            },
                            beginAtZero: false,
                            ticks: {
                                color: '#adb5bd'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)',
                                drawBorder: false
                            }
                        }
                    }
                }
            });
            } catch (error) {
                console.error('Fehler beim Erstellen des ELO-Diagramms:', error);
                // Fallback: Zeige eine Fehlermeldung im Canvas-Bereich
                const canvas = document.getElementById('eloChartCanvas');
                const ctx = canvas.getContext('2d');
                ctx.fillStyle = '#adb5bd';
                ctx.font = '16px sans-serif';
                ctx.textAlign = 'center';
                ctx.fillText('Diagramm konnte nicht geladen werden', canvas.width / 2, canvas.height / 2);
            }
        }

        // Seitenvergleich Chart
        const sideDataElement = document.getElementById('sideChartData');
        if (sideDataElement) {
            const sideChartData = JSON.parse(sideDataElement.textContent);
            const sideCanvas = document.getElementById('sideComparisonChart');
            
            if (sideCanvas && sideChartData) {
                try {
                    const ctx2 = sideCanvas.getContext('2d');
                    
                    new Chart(ctx2, {
                        type: 'bar',
                        data: sideChartData,
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: true,
                                    position: 'top',
                                    labels: {
                                        color: '#f8f9fa',
                                        font: {
                                            size: 12
                                        },
                                        usePointStyle: true,
                                        pointStyle: 'rect'
                                    }
                                },
                                tooltip: {
                                    backgroundColor: 'rgba(33, 37, 41, 0.9)',
                                    titleColor: '#f8f9fa',
                                    bodyColor: '#f8f9fa',
                                    borderColor: '#6c757d',
                                    borderWidth: 1,
                                    callbacks: {
                                        title: function(context) {
                                            return context[0].label;
                                        },
                                        label: function(context) {
                                            return context.dataset.label + ': ' + context.parsed.y;
                                        }
                                    }
                                }
                            },
                            scales: {
                                x: {
                                    display: true,
                                    ticks: {
                                        color: '#adb5bd',
                                        font: {
                                            size: 11
                                        }
                                    },
                                    grid: {
                                        display: false
                                    }
                                },
                                y: {
                                    display: true,
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Anzahl Spiele',
                                        color: '#f8f9fa'
                                    },
                                    ticks: {
                                        color: '#adb5bd',
                                        stepSize: 1
                                    },
                                    grid: {
                                        color: 'rgba(255, 255, 255, 0.1)',
                                        drawBorder: false
                                    }
                                }
                            }
                        }
                    });
                } catch (error) {
                    console.error('Fehler beim Erstellen des Seitenvergleich-Diagramms:', error);
                }
            }
        }
    });
</script>
{% endblock %} 